/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// Specifies the contacts to remove from your target list(s) using one of several mutually exclusive properties.
    /// </summary>
    [DataContract(Name = "createListRemoveActivity_request_source")]
    public partial class CreateListRemoveActivityRequestSource : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateListRemoveActivityRequestSource" /> class.
        /// </summary>
        /// <param name="listIds">Include up to 50 &lt;code&gt;list_id&lt;/code&gt; values to remove all contact list members from your target list(s). This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties..</param>
        /// <param name="contactIds">Include up to 500 &lt;code&gt;contact_id&lt;/code&gt; values to remove the contacts from your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties..</param>
        /// <param name="allActiveContacts">Removes all active (billable) contacts from your targeted lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties. (default to false).</param>
        /// <param name="engagementLevel">Removes all contacts that meet the selected  &lt;code&gt;engagement_level &lt;/code&gt; to your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties..</param>
        /// <param name="tagIds">Removes all contacts assigned with the specified &lt;code&gt;tag_id&lt;/code&gt;s from your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties..</param>
        public CreateListRemoveActivityRequestSource(List<Guid> listIds = default(List<Guid>), List<Guid> contactIds = default(List<Guid>), bool allActiveContacts = false, string engagementLevel = default(string), List<Guid> tagIds = default(List<Guid>))
        {
            this.ListIds = listIds;
            this.ContactIds = contactIds;
            this.AllActiveContacts = allActiveContacts;
            this.EngagementLevel = engagementLevel;
            this.TagIds = tagIds;
        }

        /// <summary>
        /// Include up to 50 &lt;code&gt;list_id&lt;/code&gt; values to remove all contact list members from your target list(s). This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.
        /// </summary>
        /// <value>Include up to 50 &lt;code&gt;list_id&lt;/code&gt; values to remove all contact list members from your target list(s). This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.</value>
        [DataMember(Name = "list_ids", EmitDefaultValue = false)]
        public List<Guid> ListIds { get; set; }

        /// <summary>
        /// Include up to 500 &lt;code&gt;contact_id&lt;/code&gt; values to remove the contacts from your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.
        /// </summary>
        /// <value>Include up to 500 &lt;code&gt;contact_id&lt;/code&gt; values to remove the contacts from your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.</value>
        [DataMember(Name = "contact_ids", EmitDefaultValue = false)]
        public List<Guid> ContactIds { get; set; }

        /// <summary>
        /// Removes all active (billable) contacts from your targeted lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.
        /// </summary>
        /// <value>Removes all active (billable) contacts from your targeted lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.</value>
        /// <example>true</example>
        [DataMember(Name = "all_active_contacts", EmitDefaultValue = true)]
        public bool AllActiveContacts { get; set; }

        /// <summary>
        /// Removes all contacts that meet the selected  &lt;code&gt;engagement_level &lt;/code&gt; to your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.
        /// </summary>
        /// <value>Removes all contacts that meet the selected  &lt;code&gt;engagement_level &lt;/code&gt; to your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.</value>
        /// <example>high</example>
        [DataMember(Name = "engagement_level", EmitDefaultValue = false)]
        public string EngagementLevel { get; set; }

        /// <summary>
        /// Removes all contacts assigned with the specified &lt;code&gt;tag_id&lt;/code&gt;s from your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.
        /// </summary>
        /// <value>Removes all contacts assigned with the specified &lt;code&gt;tag_id&lt;/code&gt;s from your target lists. This property is mutually exclusive with all other &lt;code&gt;source&lt;/code&gt; properties.</value>
        [DataMember(Name = "tag_ids", EmitDefaultValue = false)]
        public List<Guid> TagIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateListRemoveActivityRequestSource {\n");
            sb.Append("  ListIds: ").Append(ListIds).Append("\n");
            sb.Append("  ContactIds: ").Append(ContactIds).Append("\n");
            sb.Append("  AllActiveContacts: ").Append(AllActiveContacts).Append("\n");
            sb.Append("  EngagementLevel: ").Append(EngagementLevel).Append("\n");
            sb.Append("  TagIds: ").Append(TagIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
