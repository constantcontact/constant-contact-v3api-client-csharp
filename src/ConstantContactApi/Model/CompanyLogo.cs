/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.53
 *
 * The version of the OpenAPI document: 1.0.171
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// CompanyLogo
    /// </summary>
    [DataContract(Name = "CompanyLogo")]
    public partial class CompanyLogo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompanyLogo" /> class.
        /// </summary>
        /// <param name="url">The internal URL used to get the company logo image file hosted locally in your account&#39;s MyLibrary..</param>
        /// <param name="externalUrl">The external URL used to get the company logo image file that is hosted on an external website..</param>
        /// <param name="internalId">The internal ID used to identify the image hosted in your account&#39;s MyLibrary..</param>
        public CompanyLogo(string url = default(string), string externalUrl = default(string), string internalId = default(string))
        {
            this.Url = url;
            this.ExternalUrl = externalUrl;
            this.InternalId = internalId;
        }

        /// <summary>
        /// The internal URL used to get the company logo image file hosted locally in your account&#39;s MyLibrary.
        /// </summary>
        /// <value>The internal URL used to get the company logo image file hosted locally in your account&#39;s MyLibrary.</value>
        /// <example>https://files.constantcontact.com/3a20c2f5701/780c1ff3-7fc6-4712-a862-ad5b6af57d38.jpg.</example>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// The external URL used to get the company logo image file that is hosted on an external website.
        /// </summary>
        /// <value>The external URL used to get the company logo image file that is hosted on an external website.</value>
        /// <example>https://www.google.com/images/logos/google_logo_41.png.</example>
        [DataMember(Name = "external_url", EmitDefaultValue = false)]
        public string ExternalUrl { get; set; }

        /// <summary>
        /// The internal ID used to identify the image hosted in your account&#39;s MyLibrary.
        /// </summary>
        /// <value>The internal ID used to identify the image hosted in your account&#39;s MyLibrary.</value>
        /// <example>ACCOUNT.IMAGE.5</example>
        [DataMember(Name = "internal_id", EmitDefaultValue = false)]
        public string InternalId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CompanyLogo {\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  ExternalUrl: ").Append(ExternalUrl).Append("\n");
            sb.Append("  InternalId: ").Append(InternalId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
