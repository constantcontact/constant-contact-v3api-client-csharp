/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.53
 *
 * The version of the OpenAPI document: 1.0.171
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// ResendToNonOpenersObject
    /// </summary>
    [DataContract(Name = "ResendToNonOpenersObject")]
    public partial class ResendToNonOpenersObject : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResendToNonOpenersObject" /> class.
        /// </summary>
        /// <param name="resendSubject">The subject line for the resend email..</param>
        /// <param name="delayDays">The number of days to wait before Constant Contact resends the email. Valid values include &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt; days. This property is mutually exclusive with &lt;code&gt;delay_minutes&lt;/code&gt;. This value is only returned in the response results if the resend activity was created with &lt;code&gt;delay_days&lt;/code&gt; or the &lt;code&gt;delay_minutes&lt;/code&gt; equal to an exact day value..</param>
        /// <param name="delayMinutes">The number of minutes to wait before Constant Contact resends the email. There are 1,440 minutes in a day. Valid values includes a minimum of &lt;code&gt;720&lt;/code&gt; (12 hours) and a maximum of &lt;code&gt;14,400&lt;/code&gt; minutes (10 days). This property is mutually exclusive with &lt;code&gt;delay_days&lt;/code&gt;..</param>
        /// <param name="resendRequestId">For scheduled or sent resend to non-opener emails, this property is a unique identifier for the resend. For draft email campaign resend activities, the value of this property is &lt;code&gt;DRAFT&lt;/code&gt;..</param>
        public ResendToNonOpenersObject(string resendSubject = default(string), int delayDays = default(int), int delayMinutes = default(int), string resendRequestId = default(string))
        {
            this.ResendSubject = resendSubject;
            this.DelayDays = delayDays;
            this.DelayMinutes = delayMinutes;
            this.ResendRequestId = resendRequestId;
        }

        /// <summary>
        /// The subject line for the resend email.
        /// </summary>
        /// <value>The subject line for the resend email.</value>
        /// <example>Our Big Sale is Coming Soon!</example>
        [DataMember(Name = "resend_subject", EmitDefaultValue = false)]
        public string ResendSubject { get; set; }

        /// <summary>
        /// The number of days to wait before Constant Contact resends the email. Valid values include &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt; days. This property is mutually exclusive with &lt;code&gt;delay_minutes&lt;/code&gt;. This value is only returned in the response results if the resend activity was created with &lt;code&gt;delay_days&lt;/code&gt; or the &lt;code&gt;delay_minutes&lt;/code&gt; equal to an exact day value.
        /// </summary>
        /// <value>The number of days to wait before Constant Contact resends the email. Valid values include &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt; days. This property is mutually exclusive with &lt;code&gt;delay_minutes&lt;/code&gt;. This value is only returned in the response results if the resend activity was created with &lt;code&gt;delay_days&lt;/code&gt; or the &lt;code&gt;delay_minutes&lt;/code&gt; equal to an exact day value.</value>
        /// <example>7</example>
        [DataMember(Name = "delay_days", EmitDefaultValue = false)]
        public int DelayDays { get; set; }

        /// <summary>
        /// The number of minutes to wait before Constant Contact resends the email. There are 1,440 minutes in a day. Valid values includes a minimum of &lt;code&gt;720&lt;/code&gt; (12 hours) and a maximum of &lt;code&gt;14,400&lt;/code&gt; minutes (10 days). This property is mutually exclusive with &lt;code&gt;delay_days&lt;/code&gt;.
        /// </summary>
        /// <value>The number of minutes to wait before Constant Contact resends the email. There are 1,440 minutes in a day. Valid values includes a minimum of &lt;code&gt;720&lt;/code&gt; (12 hours) and a maximum of &lt;code&gt;14,400&lt;/code&gt; minutes (10 days). This property is mutually exclusive with &lt;code&gt;delay_days&lt;/code&gt;.</value>
        [DataMember(Name = "delay_minutes", EmitDefaultValue = false)]
        public int DelayMinutes { get; set; }

        /// <summary>
        /// The system generated ISO-8601 format date and time that Constant Contact resent the email to non-openers.
        /// </summary>
        /// <value>The system generated ISO-8601 format date and time that Constant Contact resent the email to non-openers.</value>
        [DataMember(Name = "resend_date", EmitDefaultValue = false)]
        public DateTime ResendDate { get; private set; }

        /// <summary>
        /// Returns false as ResendDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResendDate()
        {
            return false;
        }
        /// <summary>
        /// For scheduled or sent resend to non-opener emails, this property is a unique identifier for the resend. For draft email campaign resend activities, the value of this property is &lt;code&gt;DRAFT&lt;/code&gt;.
        /// </summary>
        /// <value>For scheduled or sent resend to non-opener emails, this property is a unique identifier for the resend. For draft email campaign resend activities, the value of this property is &lt;code&gt;DRAFT&lt;/code&gt;.</value>
        /// <example>DRAFT</example>
        [DataMember(Name = "resend_request_id", EmitDefaultValue = false)]
        public string ResendRequestId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ResendToNonOpenersObject {\n");
            sb.Append("  ResendSubject: ").Append(ResendSubject).Append("\n");
            sb.Append("  DelayDays: ").Append(DelayDays).Append("\n");
            sb.Append("  DelayMinutes: ").Append(DelayMinutes).Append("\n");
            sb.Append("  ResendDate: ").Append(ResendDate).Append("\n");
            sb.Append("  ResendRequestId: ").Append(ResendRequestId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
