/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.53
 *
 * The version of the OpenAPI document: 1.0.171
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// Lists aggregate percents for  &#x60;click&#x60;, &#x60;open&#x60;, &#x60;did_not_open&#x60;, &#x60;bounce&#x60;, and  &#x60;unsubscribe&#x60; activities for all campaigns included on a page of results.
    /// </summary>
    [DataContract(Name = "getEmailCampaignReport_200_response_aggregate_percents")]
    public partial class GetEmailCampaignReport200ResponseAggregatePercents : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetEmailCampaignReport200ResponseAggregatePercents" /> class.
        /// </summary>
        /// <param name="click">Aggregated click rate for campaigns on the current page..</param>
        /// <param name="open">Aggregated open rate for campaigns on the current page..</param>
        /// <param name="didNotOpen">Aggregated did-not-open rate for campaigns on the current page..</param>
        /// <param name="bounce">Aggregated bounce rate for campaigns on the current page..</param>
        /// <param name="unsubscribe">Aggregated unsubscribe (optout) rate for campaigns on the current page..</param>
        public GetEmailCampaignReport200ResponseAggregatePercents(decimal click = default(decimal), decimal open = default(decimal), decimal didNotOpen = default(decimal), decimal bounce = default(decimal), decimal unsubscribe = default(decimal))
        {
            this.Click = click;
            this.Open = open;
            this.DidNotOpen = didNotOpen;
            this.Bounce = bounce;
            this.Unsubscribe = unsubscribe;
        }

        /// <summary>
        /// Aggregated click rate for campaigns on the current page.
        /// </summary>
        /// <value>Aggregated click rate for campaigns on the current page.</value>
        /// <example>43</example>
        [DataMember(Name = "click", EmitDefaultValue = false)]
        public decimal Click { get; set; }

        /// <summary>
        /// Aggregated open rate for campaigns on the current page.
        /// </summary>
        /// <value>Aggregated open rate for campaigns on the current page.</value>
        /// <example>12</example>
        [DataMember(Name = "open", EmitDefaultValue = false)]
        public decimal Open { get; set; }

        /// <summary>
        /// Aggregated did-not-open rate for campaigns on the current page.
        /// </summary>
        /// <value>Aggregated did-not-open rate for campaigns on the current page.</value>
        /// <example>23</example>
        [DataMember(Name = "did_not_open", EmitDefaultValue = false)]
        public decimal DidNotOpen { get; set; }

        /// <summary>
        /// Aggregated bounce rate for campaigns on the current page.
        /// </summary>
        /// <value>Aggregated bounce rate for campaigns on the current page.</value>
        /// <example>21</example>
        [DataMember(Name = "bounce", EmitDefaultValue = false)]
        public decimal Bounce { get; set; }

        /// <summary>
        /// Aggregated unsubscribe (optout) rate for campaigns on the current page.
        /// </summary>
        /// <value>Aggregated unsubscribe (optout) rate for campaigns on the current page.</value>
        /// <example>2</example>
        [DataMember(Name = "unsubscribe", EmitDefaultValue = false)]
        public decimal Unsubscribe { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetEmailCampaignReport200ResponseAggregatePercents {\n");
            sb.Append("  Click: ").Append(Click).Append("\n");
            sb.Append("  Open: ").Append(Open).Append("\n");
            sb.Append("  DidNotOpen: ").Append(DidNotOpen).Append("\n");
            sb.Append("  Bounce: ").Append(Bounce).Append("\n");
            sb.Append("  Unsubscribe: ").Append(Unsubscribe).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
