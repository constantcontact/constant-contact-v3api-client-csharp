/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.53
 *
 * The version of the OpenAPI document: 1.0.171
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// The base contact tracking activity representing sends, opt-outs and forwards to a friend. The basic information provided includes the campaign activity ID, tracking activity type, and time the tracking activity occurred.
    /// </summary>
    [DataContract(Name = "ContactTrackingActivity")]
    public partial class ContactTrackingActivity : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactTrackingActivity" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ContactTrackingActivity() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactTrackingActivity" /> class.
        /// </summary>
        /// <param name="contactId">The contact ID. (required).</param>
        /// <param name="campaignActivityId">The unique ID of the activity for an e-mail campaign. (required).</param>
        /// <param name="createdTime">The time the tracking activity occurred.</param>
        /// <param name="trackingActivityType">The types of the tracking activities included in the request. For example, sends, opens, clicks, bounces, opt-outs, or forwards..</param>
        /// <param name="campaignActivityName">The campaign activity name..</param>
        public ContactTrackingActivity(Guid contactId = default(Guid), Guid campaignActivityId = default(Guid), DateTime createdTime = default(DateTime), string trackingActivityType = default(string), string campaignActivityName = default(string))
        {
            this.ContactId = contactId;
            this.CampaignActivityId = campaignActivityId;
            this.CreatedTime = createdTime;
            this.TrackingActivityType = trackingActivityType;
            this.CampaignActivityName = campaignActivityName;
        }

        /// <summary>
        /// The contact ID.
        /// </summary>
        /// <value>The contact ID.</value>
        /// <example>71600990-908b-11e6-907f-0000166bff25</example>
        [DataMember(Name = "contact_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid ContactId { get; set; }

        /// <summary>
        /// The unique ID of the activity for an e-mail campaign.
        /// </summary>
        /// <value>The unique ID of the activity for an e-mail campaign.</value>
        /// <example>000010a0-1234-5678-9012-1100a0c1ab2a</example>
        [DataMember(Name = "campaign_activity_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid CampaignActivityId { get; set; }

        /// <summary>
        /// The time the tracking activity occurred
        /// </summary>
        /// <value>The time the tracking activity occurred</value>
        /// <example>2017-04-02T04:08Z</example>
        [DataMember(Name = "created_time", EmitDefaultValue = false)]
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// The types of the tracking activities included in the request. For example, sends, opens, clicks, bounces, opt-outs, or forwards.
        /// </summary>
        /// <value>The types of the tracking activities included in the request. For example, sends, opens, clicks, bounces, opt-outs, or forwards.</value>
        /// <example>em_sends</example>
        [DataMember(Name = "tracking_activity_type", EmitDefaultValue = false)]
        public string TrackingActivityType { get; set; }

        /// <summary>
        /// The campaign activity name.
        /// </summary>
        /// <value>The campaign activity name.</value>
        /// <example>April DLCV Newsletter</example>
        [DataMember(Name = "campaign_activity_name", EmitDefaultValue = false)]
        public string CampaignActivityName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContactTrackingActivity {\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  CampaignActivityId: ").Append(CampaignActivityId).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  TrackingActivityType: ").Append(TrackingActivityType).Append("\n");
            sb.Append("  CampaignActivityName: ").Append(CampaignActivityName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
