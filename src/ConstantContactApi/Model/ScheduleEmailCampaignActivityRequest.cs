/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// ScheduleEmailCampaignActivityRequest
    /// </summary>
    [DataContract(Name = "scheduleEmailCampaignActivity_request")]
    public partial class ScheduleEmailCampaignActivityRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduleEmailCampaignActivityRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ScheduleEmailCampaignActivityRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduleEmailCampaignActivityRequest" /> class.
        /// </summary>
        /// <param name="scheduledDate">The date when Constant Contact will send the email campaign activity to contacts in ISO-8601 format. For example, &lt;code&gt;2022-05-17&lt;/code&gt; and &lt;code&gt;2022-05-17T16:37:59.091Z&lt;/code&gt; are valid dates. Use &lt;code&gt;\&quot;0\&quot;&lt;/code&gt; as the date to have Constant Contact immediately send the email campaign activity to contacts. (required).</param>
        public ScheduleEmailCampaignActivityRequest(DateTime scheduledDate = default(DateTime))
        {
            this.ScheduledDate = scheduledDate;
        }

        /// <summary>
        /// The date when Constant Contact will send the email campaign activity to contacts in ISO-8601 format. For example, &lt;code&gt;2022-05-17&lt;/code&gt; and &lt;code&gt;2022-05-17T16:37:59.091Z&lt;/code&gt; are valid dates. Use &lt;code&gt;\&quot;0\&quot;&lt;/code&gt; as the date to have Constant Contact immediately send the email campaign activity to contacts.
        /// </summary>
        /// <value>The date when Constant Contact will send the email campaign activity to contacts in ISO-8601 format. For example, &lt;code&gt;2022-05-17&lt;/code&gt; and &lt;code&gt;2022-05-17T16:37:59.091Z&lt;/code&gt; are valid dates. Use &lt;code&gt;\&quot;0\&quot;&lt;/code&gt; as the date to have Constant Contact immediately send the email campaign activity to contacts.</value>
        [DataMember(Name = "scheduled_date", IsRequired = true, EmitDefaultValue = true)]
        public DateTime ScheduledDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ScheduleEmailCampaignActivityRequest {\n");
            sb.Append("  ScheduledDate: ").Append(ScheduledDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
