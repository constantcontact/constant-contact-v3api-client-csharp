/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// ContactCreateOrUpdateResponse
    /// </summary>
    [DataContract(Name = "ContactCreateOrUpdateResponse")]
    public partial class ContactCreateOrUpdateResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactCreateOrUpdateResponse" /> class.
        /// </summary>
        /// <param name="contactId">The unique identifier for the contact that the V3 API created or updated..</param>
        /// <param name="action">Identifies if the V3 API created a new contact or updated an existing contact..</param>
        public ContactCreateOrUpdateResponse(Guid contactId = default(Guid), string action = default(string))
        {
            this.ContactId = contactId;
            this.Action = action;
        }

        /// <summary>
        /// The unique identifier for the contact that the V3 API created or updated.
        /// </summary>
        /// <value>The unique identifier for the contact that the V3 API created or updated.</value>
        /// <example>ab7ab702-b935-11e9-8a58-fa163e6b01c1</example>
        [DataMember(Name = "contact_id", EmitDefaultValue = false)]
        public Guid ContactId { get; set; }

        /// <summary>
        /// Identifies if the V3 API created a new contact or updated an existing contact.
        /// </summary>
        /// <value>Identifies if the V3 API created a new contact or updated an existing contact.</value>
        [DataMember(Name = "action", EmitDefaultValue = false)]
        public string Action { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContactCreateOrUpdateResponse {\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
