/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// GetEmailStatsReport200ResponseResultsInner
    /// </summary>
    [DataContract(Name = "getEmailStatsReport_200_response_results_inner")]
    public partial class GetEmailStatsReport200ResponseResultsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetEmailStatsReport200ResponseResultsInner" /> class.
        /// </summary>
        /// <param name="campaignId">The ID that uniquely identifies the campaign (UUID)..</param>
        /// <param name="stats">stats.</param>
        /// <param name="percents">percents.</param>
        /// <param name="lastRefreshTime">The date and time that the campaign stats were last refreshed..</param>
        public GetEmailStatsReport200ResponseResultsInner(string campaignId = default(string), GetEmailStatsReport200ResponseResultsInnerStats stats = default(GetEmailStatsReport200ResponseResultsInnerStats), GetEmailStatsReport200ResponseResultsInnerPercents percents = default(GetEmailStatsReport200ResponseResultsInnerPercents), DateTime lastRefreshTime = default(DateTime))
        {
            this.CampaignId = campaignId;
            this.Stats = stats;
            this.Percents = percents;
            this.LastRefreshTime = lastRefreshTime;
        }

        /// <summary>
        /// The ID that uniquely identifies the campaign (UUID).
        /// </summary>
        /// <value>The ID that uniquely identifies the campaign (UUID).</value>
        /// <example>82ee2c37-c8f8-4974-9560-ef93ad51d58z</example>
        [DataMember(Name = "campaign_id", EmitDefaultValue = false)]
        public string CampaignId { get; set; }

        /// <summary>
        /// Gets or Sets Stats
        /// </summary>
        [DataMember(Name = "stats", EmitDefaultValue = false)]
        public GetEmailStatsReport200ResponseResultsInnerStats Stats { get; set; }

        /// <summary>
        /// Gets or Sets Percents
        /// </summary>
        [DataMember(Name = "percents", EmitDefaultValue = false)]
        public GetEmailStatsReport200ResponseResultsInnerPercents Percents { get; set; }

        /// <summary>
        /// The date and time that the campaign stats were last refreshed.
        /// </summary>
        /// <value>The date and time that the campaign stats were last refreshed.</value>
        /// <example>2015-08-25T22:00:09.908Z</example>
        [DataMember(Name = "last_refresh_time", EmitDefaultValue = false)]
        public DateTime LastRefreshTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetEmailStatsReport200ResponseResultsInner {\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  Stats: ").Append(Stats).Append("\n");
            sb.Append("  Percents: ").Append(Percents).Append("\n");
            sb.Append("  LastRefreshTime: ").Append(LastRefreshTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
