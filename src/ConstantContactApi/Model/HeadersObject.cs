/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// HeadersObject
    /// </summary>
    [DataContract(Name = "HeadersObject")]
    public partial class HeadersObject : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HeadersObject" /> class.
        /// </summary>
        /// <param name="headerKey">The name of the header..</param>
        /// <param name="headerValue">The value of the header..</param>
        public HeadersObject(string headerKey = default(string), string headerValue = default(string))
        {
            this.HeaderKey = headerKey;
            this.HeaderValue = headerValue;
        }

        /// <summary>
        /// The name of the header.
        /// </summary>
        /// <value>The name of the header.</value>
        /// <example>Accept</example>
        [DataMember(Name = "header_key", EmitDefaultValue = false)]
        public string HeaderKey { get; set; }

        /// <summary>
        /// The value of the header.
        /// </summary>
        /// <value>The value of the header.</value>
        /// <example>application/json</example>
        [DataMember(Name = "header_value", EmitDefaultValue = false)]
        public string HeaderValue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HeadersObject {\n");
            sb.Append("  HeaderKey: ").Append(HeaderKey).Append("\n");
            sb.Append("  HeaderValue: ").Append(HeaderValue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
