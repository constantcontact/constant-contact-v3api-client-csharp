/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// JSON object that contains the fields Constant Contact uses to construct the HTTP request you are sending on behalf of a managed account.
    /// </summary>
    [DataContract(Name = "PartnerAccountOperationsRequest")]
    public partial class PartnerAccountOperationsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PartnerAccountOperationsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PartnerAccountOperationsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PartnerAccountOperationsRequest" /> class.
        /// </summary>
        /// <param name="accountOperationUrl">The API method path for the request you are sending on behalf of a managed child account. This value should be a V3 API URL without the https://api.cc.email/v3 base url and with any path parameter names included. For example: &lt;code&gt;/emails/activities/{campaign_activity_id}&lt;/code&gt;. (required).</param>
        /// <param name="accountOperationMethod">The http method for the request you are sending on behalf of a managed child account. (required).</param>
        /// <param name="accountOperationPayload">The request payload for the request you are sending on behalf of a managed child account. If you provide a JSON payload using this parameter, make sure that the JSON is string escaped..</param>
        /// <param name="accountOperationQueryParameters">An array containing the query parameters for the request you are sending on behalf of a managed child account..</param>
        /// <param name="accountOperationPathParameters">An array containing the path parameters for the request you are sending on behalf of a managed child account..</param>
        /// <param name="accountOperationHeaders">An array containing the headers for the request you are sending on behalf of a managed child account..</param>
        public PartnerAccountOperationsRequest(string accountOperationUrl = default(string), string accountOperationMethod = default(string), string accountOperationPayload = default(string), List<PartnerAccountOperationsRequestAccountOperationQueryParametersInner> accountOperationQueryParameters = default(List<PartnerAccountOperationsRequestAccountOperationQueryParametersInner>), List<PartnerAccountOperationsRequestAccountOperationPathParametersInner> accountOperationPathParameters = default(List<PartnerAccountOperationsRequestAccountOperationPathParametersInner>), List<PartnerAccountOperationsRequestAccountOperationHeadersInner> accountOperationHeaders = default(List<PartnerAccountOperationsRequestAccountOperationHeadersInner>))
        {
            // to ensure "accountOperationUrl" is required (not null)
            if (accountOperationUrl == null)
            {
                throw new ArgumentNullException("accountOperationUrl is a required property for PartnerAccountOperationsRequest and cannot be null");
            }
            this.AccountOperationUrl = accountOperationUrl;
            // to ensure "accountOperationMethod" is required (not null)
            if (accountOperationMethod == null)
            {
                throw new ArgumentNullException("accountOperationMethod is a required property for PartnerAccountOperationsRequest and cannot be null");
            }
            this.AccountOperationMethod = accountOperationMethod;
            this.AccountOperationPayload = accountOperationPayload;
            this.AccountOperationQueryParameters = accountOperationQueryParameters;
            this.AccountOperationPathParameters = accountOperationPathParameters;
            this.AccountOperationHeaders = accountOperationHeaders;
        }

        /// <summary>
        /// The API method path for the request you are sending on behalf of a managed child account. This value should be a V3 API URL without the https://api.cc.email/v3 base url and with any path parameter names included. For example: &lt;code&gt;/emails/activities/{campaign_activity_id}&lt;/code&gt;.
        /// </summary>
        /// <value>The API method path for the request you are sending on behalf of a managed child account. This value should be a V3 API URL without the https://api.cc.email/v3 base url and with any path parameter names included. For example: &lt;code&gt;/emails/activities/{campaign_activity_id}&lt;/code&gt;.</value>
        /// <example>/contacts/{contact_id}</example>
        [DataMember(Name = "account_operation_url", IsRequired = true, EmitDefaultValue = true)]
        public string AccountOperationUrl { get; set; }

        /// <summary>
        /// The http method for the request you are sending on behalf of a managed child account.
        /// </summary>
        /// <value>The http method for the request you are sending on behalf of a managed child account.</value>
        /// <example>GET</example>
        [DataMember(Name = "account_operation_method", IsRequired = true, EmitDefaultValue = true)]
        public string AccountOperationMethod { get; set; }

        /// <summary>
        /// The request payload for the request you are sending on behalf of a managed child account. If you provide a JSON payload using this parameter, make sure that the JSON is string escaped.
        /// </summary>
        /// <value>The request payload for the request you are sending on behalf of a managed child account. If you provide a JSON payload using this parameter, make sure that the JSON is string escaped.</value>
        [DataMember(Name = "account_operation_payload", EmitDefaultValue = false)]
        public string AccountOperationPayload { get; set; }

        /// <summary>
        /// An array containing the query parameters for the request you are sending on behalf of a managed child account.
        /// </summary>
        /// <value>An array containing the query parameters for the request you are sending on behalf of a managed child account.</value>
        [DataMember(Name = "account_operation_query_parameters", EmitDefaultValue = false)]
        public List<PartnerAccountOperationsRequestAccountOperationQueryParametersInner> AccountOperationQueryParameters { get; set; }

        /// <summary>
        /// An array containing the path parameters for the request you are sending on behalf of a managed child account.
        /// </summary>
        /// <value>An array containing the path parameters for the request you are sending on behalf of a managed child account.</value>
        [DataMember(Name = "account_operation_path_parameters", EmitDefaultValue = false)]
        public List<PartnerAccountOperationsRequestAccountOperationPathParametersInner> AccountOperationPathParameters { get; set; }

        /// <summary>
        /// An array containing the headers for the request you are sending on behalf of a managed child account.
        /// </summary>
        /// <value>An array containing the headers for the request you are sending on behalf of a managed child account.</value>
        [DataMember(Name = "account_operation_headers", EmitDefaultValue = false)]
        public List<PartnerAccountOperationsRequestAccountOperationHeadersInner> AccountOperationHeaders { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartnerAccountOperationsRequest {\n");
            sb.Append("  AccountOperationUrl: ").Append(AccountOperationUrl).Append("\n");
            sb.Append("  AccountOperationMethod: ").Append(AccountOperationMethod).Append("\n");
            sb.Append("  AccountOperationPayload: ").Append(AccountOperationPayload).Append("\n");
            sb.Append("  AccountOperationQueryParameters: ").Append(AccountOperationQueryParameters).Append("\n");
            sb.Append("  AccountOperationPathParameters: ").Append(AccountOperationPathParameters).Append("\n");
            sb.Append("  AccountOperationHeaders: ").Append(AccountOperationHeaders).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
