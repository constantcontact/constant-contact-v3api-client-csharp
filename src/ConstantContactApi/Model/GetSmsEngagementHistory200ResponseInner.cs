/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// Provides a contact&#39;s SMS engagement history details. The properties returned depend on the type of SMS consent granted by the contact.
    /// </summary>
    [DataContract(Name = "getSmsEngagementHistory_200_response_inner")]
    public partial class GetSmsEngagementHistory200ResponseInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSmsEngagementHistory200ResponseInner" /> class.
        /// </summary>
        /// <param name="contactId">The unique contact UUID..</param>
        /// <param name="smsChannelId">The unique SMS channel UUID..</param>
        /// <param name="smsChannelHistoryId">The unique SMS channel history UUID..</param>
        /// <param name="insertTime">The date and time that the history record was created, in ISO-8601 format. System generated..</param>
        /// <param name="historyDetails">historyDetails.</param>
        public GetSmsEngagementHistory200ResponseInner(string contactId = default(string), string smsChannelId = default(string), string smsChannelHistoryId = default(string), DateTime insertTime = default(DateTime), GetSmsEngagementHistory200ResponseInnerHistoryDetails historyDetails = default(GetSmsEngagementHistory200ResponseInnerHistoryDetails))
        {
            this.ContactId = contactId;
            this.SmsChannelId = smsChannelId;
            this.SmsChannelHistoryId = smsChannelHistoryId;
            this.InsertTime = insertTime;
            this.HistoryDetails = historyDetails;
        }

        /// <summary>
        /// The unique contact UUID.
        /// </summary>
        /// <value>The unique contact UUID.</value>
        /// <example>7f7923da-ebf7-11ec-ae6e-3e22fbb230ec</example>
        [DataMember(Name = "contact_id", EmitDefaultValue = false)]
        public string ContactId { get; set; }

        /// <summary>
        /// The unique SMS channel UUID.
        /// </summary>
        /// <value>The unique SMS channel UUID.</value>
        /// <example>3fa85f64-5712-6245-b3fc-2c963f66bfc6</example>
        [DataMember(Name = "sms_channel_id", EmitDefaultValue = false)]
        public string SmsChannelId { get; set; }

        /// <summary>
        /// The unique SMS channel history UUID.
        /// </summary>
        /// <value>The unique SMS channel history UUID.</value>
        /// <example>04515cb3-17be-41e4-823a-f71c3d381c7b</example>
        [DataMember(Name = "sms_channel_history_id", EmitDefaultValue = false)]
        public string SmsChannelHistoryId { get; set; }

        /// <summary>
        /// The date and time that the history record was created, in ISO-8601 format. System generated.
        /// </summary>
        /// <value>The date and time that the history record was created, in ISO-8601 format. System generated.</value>
        /// <example>2016-03-03T10:53:04-05:00</example>
        [DataMember(Name = "insert_time", EmitDefaultValue = false)]
        public DateTime InsertTime { get; set; }

        /// <summary>
        /// Gets or Sets HistoryDetails
        /// </summary>
        [DataMember(Name = "history_details", EmitDefaultValue = false)]
        public GetSmsEngagementHistory200ResponseInnerHistoryDetails HistoryDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetSmsEngagementHistory200ResponseInner {\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  SmsChannelId: ").Append(SmsChannelId).Append("\n");
            sb.Append("  SmsChannelHistoryId: ").Append(SmsChannelHistoryId).Append("\n");
            sb.Append("  InsertTime: ").Append(InsertTime).Append("\n");
            sb.Append("  HistoryDetails: ").Append(HistoryDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
