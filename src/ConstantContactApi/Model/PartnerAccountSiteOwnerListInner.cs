/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// PartnerAccountSiteOwnerListInner
    /// </summary>
    [DataContract(Name = "PartnerAccount_site_owner_list_inner")]
    public partial class PartnerAccountSiteOwnerListInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PartnerAccountSiteOwnerListInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public PartnerAccountSiteOwnerListInner()
        {
        }

        /// <summary>
        /// The obfuscated ID used to uniquely identify a client account.
        /// </summary>
        /// <value>The obfuscated ID used to uniquely identify a client account.</value>
        /// <example>a08e1izvh8t9</example>
        [DataMember(Name = "encoded_account_id", EmitDefaultValue = false)]
        public string EncodedAccountId { get; private set; }

        /// <summary>
        /// Returns false as EncodedAccountId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEncodedAccountId()
        {
            return false;
        }
        /// <summary>
        /// The total number of subscriber contacts that are associated with a client account.
        /// </summary>
        /// <value>The total number of subscriber contacts that are associated with a client account.</value>
        /// <example>65</example>
        [DataMember(Name = "subscriber_count", EmitDefaultValue = false)]
        public long SubscriberCount { get; private set; }

        /// <summary>
        /// Returns false as SubscriberCount should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSubscriberCount()
        {
            return false;
        }
        /// <summary>
        /// The name of the organization associated with this client account.
        /// </summary>
        /// <value>The name of the organization associated with this client account.</value>
        /// <example>Zenomatic</example>
        [DataMember(Name = "organization_name", EmitDefaultValue = false)]
        public string OrganizationName { get; private set; }

        /// <summary>
        /// Returns false as OrganizationName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrganizationName()
        {
            return false;
        }
        /// <summary>
        /// The user name that identifies a client account.
        /// </summary>
        /// <value>The user name that identifies a client account.</value>
        /// <example>Zen1016153</example>
        [DataMember(Name = "site_owner_name", EmitDefaultValue = false)]
        public string SiteOwnerName { get; private set; }

        /// <summary>
        /// Returns false as SiteOwnerName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSiteOwnerName()
        {
            return false;
        }
        /// <summary>
        /// The client&#39;s account billing status. When you first create a client account the &#x60;billing status&#x60; defaults to &#x60;Trial&#x60;. Billing status values include: &lt;ul&gt;   &lt;li&gt;&lt;code&gt;Trial&lt;/code&gt; - A non-paying trial client account (default value).&lt;/li&gt;   &lt;li&gt;&lt;code&gt;Open&lt;/code&gt; - An active and paying client account.&lt;/li&gt;   &lt;li&gt;&lt;code&gt;Canceled&lt;/code&gt; - A canceled client account.&lt;/li&gt;   &lt;li&gt;&lt;code&gt;Trial End&lt;/code&gt; - The trial period has ended for this client account.&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <value>The client&#39;s account billing status. When you first create a client account the &#x60;billing status&#x60; defaults to &#x60;Trial&#x60;. Billing status values include: &lt;ul&gt;   &lt;li&gt;&lt;code&gt;Trial&lt;/code&gt; - A non-paying trial client account (default value).&lt;/li&gt;   &lt;li&gt;&lt;code&gt;Open&lt;/code&gt; - An active and paying client account.&lt;/li&gt;   &lt;li&gt;&lt;code&gt;Canceled&lt;/code&gt; - A canceled client account.&lt;/li&gt;   &lt;li&gt;&lt;code&gt;Trial End&lt;/code&gt; - The trial period has ended for this client account.&lt;/li&gt; &lt;/ul&gt;</value>
        /// <example>Open</example>
        [DataMember(Name = "billing_status", EmitDefaultValue = false)]
        public string BillingStatus { get; private set; }

        /// <summary>
        /// Returns false as BillingStatus should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeBillingStatus()
        {
            return false;
        }
        /// <summary>
        /// The system generated date and time (ISO-8601) showing when the client last logged into their Constant Contact account. If a client has not logged into their account, the value is &#x60;null&#x60;. This property does not display in the results.
        /// </summary>
        /// <value>The system generated date and time (ISO-8601) showing when the client last logged into their Constant Contact account. If a client has not logged into their account, the value is &#x60;null&#x60;. This property does not display in the results.</value>
        /// <example>2019-04-25T11:08Z</example>
        [DataMember(Name = "last_login_date", EmitDefaultValue = false)]
        public DateTime LastLoginDate { get; private set; }

        /// <summary>
        /// Returns false as LastLoginDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeLastLoginDate()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartnerAccountSiteOwnerListInner {\n");
            sb.Append("  EncodedAccountId: ").Append(EncodedAccountId).Append("\n");
            sb.Append("  SubscriberCount: ").Append(SubscriberCount).Append("\n");
            sb.Append("  OrganizationName: ").Append(OrganizationName).Append("\n");
            sb.Append("  SiteOwnerName: ").Append(SiteOwnerName).Append("\n");
            sb.Append("  BillingStatus: ").Append(BillingStatus).Append("\n");
            sb.Append("  LastLoginDate: ").Append(LastLoginDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
