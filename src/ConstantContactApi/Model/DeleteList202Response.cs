/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// DeleteList202Response
    /// </summary>
    [DataContract(Name = "deleteList_202_response")]
    public partial class DeleteList202Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteList202Response" /> class.
        /// </summary>
        /// <param name="activityId">Unique ID for the delete list batch job..</param>
        /// <param name="state">The state of the request:  &lt;p&gt;&lt;ul&gt;  &lt;li&gt;initialized - request has been received&lt;/li&gt;  &lt;li&gt;processing - request is being processed&lt;/li&gt;  &lt;li&gt;completed - job completed&lt;/li&gt;  &lt;li&gt;cancelled - request was cancelled&lt;/li&gt;  &lt;li&gt;failed - job failed to complete&lt;/li&gt;  &lt;li&gt;timed_out - the request timed out before completing\&quot;&lt;/li&gt;   &lt;/ul&gt; &lt;/p&gt;.</param>
        /// <param name="createdAt">Date and time that the request was received, in ISO-8601 format..</param>
        /// <param name="updatedAt">Date and time that the request status was updated, in ISO-8601 format..</param>
        /// <param name="percentDone">Job completion percentage.</param>
        /// <param name="activityErrors">Array of messages describing the errors that occurred..</param>
        /// <param name="links">links.</param>
        public DeleteList202Response(Guid activityId = default(Guid), string state = default(string), DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime), int percentDone = default(int), List<string> activityErrors = default(List<string>), CreateListDeleteActivity201ResponseLinks links = default(CreateListDeleteActivity201ResponseLinks))
        {
            this.ActivityId = activityId;
            this.State = state;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.PercentDone = percentDone;
            this.ActivityErrors = activityErrors;
            this.Links = links;
        }

        /// <summary>
        /// Unique ID for the delete list batch job.
        /// </summary>
        /// <value>Unique ID for the delete list batch job.</value>
        [DataMember(Name = "activity_id", EmitDefaultValue = false)]
        public Guid ActivityId { get; set; }

        /// <summary>
        /// The state of the request:  &lt;p&gt;&lt;ul&gt;  &lt;li&gt;initialized - request has been received&lt;/li&gt;  &lt;li&gt;processing - request is being processed&lt;/li&gt;  &lt;li&gt;completed - job completed&lt;/li&gt;  &lt;li&gt;cancelled - request was cancelled&lt;/li&gt;  &lt;li&gt;failed - job failed to complete&lt;/li&gt;  &lt;li&gt;timed_out - the request timed out before completing\&quot;&lt;/li&gt;   &lt;/ul&gt; &lt;/p&gt;
        /// </summary>
        /// <value>The state of the request:  &lt;p&gt;&lt;ul&gt;  &lt;li&gt;initialized - request has been received&lt;/li&gt;  &lt;li&gt;processing - request is being processed&lt;/li&gt;  &lt;li&gt;completed - job completed&lt;/li&gt;  &lt;li&gt;cancelled - request was cancelled&lt;/li&gt;  &lt;li&gt;failed - job failed to complete&lt;/li&gt;  &lt;li&gt;timed_out - the request timed out before completing\&quot;&lt;/li&gt;   &lt;/ul&gt; &lt;/p&gt;</value>
        /// <example>initialized</example>
        [DataMember(Name = "state", EmitDefaultValue = false)]
        public string State { get; set; }

        /// <summary>
        /// Date and time that the request was received, in ISO-8601 format.
        /// </summary>
        /// <value>Date and time that the request was received, in ISO-8601 format.</value>
        /// <example>2016-03-03T10:53:04-05:00</example>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Date and time that the request status was updated, in ISO-8601 format.
        /// </summary>
        /// <value>Date and time that the request status was updated, in ISO-8601 format.</value>
        /// <example>2016-03-03T10:56:29-05:00</example>
        [DataMember(Name = "updated_at", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Job completion percentage
        /// </summary>
        /// <value>Job completion percentage</value>
        /// <example>1</example>
        [DataMember(Name = "percent_done", EmitDefaultValue = false)]
        public int PercentDone { get; set; }

        /// <summary>
        /// Array of messages describing the errors that occurred.
        /// </summary>
        /// <value>Array of messages describing the errors that occurred.</value>
        [DataMember(Name = "activity_errors", EmitDefaultValue = false)]
        public List<string> ActivityErrors { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name = "_links", EmitDefaultValue = false)]
        public CreateListDeleteActivity201ResponseLinks Links { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeleteList202Response {\n");
            sb.Append("  ActivityId: ").Append(ActivityId).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  PercentDone: ").Append(PercentDone).Append("\n");
            sb.Append("  ActivityErrors: ").Append(ActivityErrors).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
