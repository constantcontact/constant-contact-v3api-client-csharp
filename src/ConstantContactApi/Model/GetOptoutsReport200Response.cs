/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.53
 *
 * The version of the OpenAPI document: 1.0.171
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// GetOptoutsReport200Response
    /// </summary>
    [DataContract(Name = "getOptoutsReport_200_response")]
    public partial class GetOptoutsReport200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetOptoutsReport200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetOptoutsReport200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetOptoutsReport200Response" /> class.
        /// </summary>
        /// <param name="trackingActivities">The list of opt-out tracking activities (required).</param>
        /// <param name="links">links (required).</param>
        public GetOptoutsReport200Response(List<GetOptoutsReport200ResponseTrackingActivitiesInner> trackingActivities = default(List<GetOptoutsReport200ResponseTrackingActivitiesInner>), GetEmailSendsReport200ResponseLinks links = default(GetEmailSendsReport200ResponseLinks))
        {
            // to ensure "trackingActivities" is required (not null)
            if (trackingActivities == null)
            {
                throw new ArgumentNullException("trackingActivities is a required property for GetOptoutsReport200Response and cannot be null");
            }
            this.TrackingActivities = trackingActivities;
            // to ensure "links" is required (not null)
            if (links == null)
            {
                throw new ArgumentNullException("links is a required property for GetOptoutsReport200Response and cannot be null");
            }
            this.Links = links;
        }

        /// <summary>
        /// The list of opt-out tracking activities
        /// </summary>
        /// <value>The list of opt-out tracking activities</value>
        [DataMember(Name = "tracking_activities", IsRequired = true, EmitDefaultValue = true)]
        public List<GetOptoutsReport200ResponseTrackingActivitiesInner> TrackingActivities { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name = "_links", IsRequired = true, EmitDefaultValue = true)]
        public GetEmailSendsReport200ResponseLinks Links { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetOptoutsReport200Response {\n");
            sb.Append("  TrackingActivities: ").Append(TrackingActivities).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
