/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.53
 *
 * The version of the OpenAPI document: 1.0.171
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// Includes SMS channel and consent details.
    /// </summary>
    [DataContract(Name = "getContactById_200_response_sms_channel")]
    public partial class GetContactById200ResponseSmsChannel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetContactById200ResponseSmsChannel" /> class.
        /// </summary>
        /// <param name="smsChannelId">The unique ID that identifies an SMS channel..</param>
        /// <param name="smsAddress">The phone number of the SMS-capable phone, which does not include the country code..</param>
        /// <param name="dialCode">The dial code used for the SMS-capable phone. For example, the dial code for the United States is &lt;code&gt;1&lt;/code&gt;..</param>
        /// <param name="countryCode">The two character ISO country code used for the SMS-capable phone. For example, the country code for the United States is &lt;code&gt;US&lt;/code&gt;..</param>
        /// <param name="updateSource">Identifies who last updated SMS details for the contact. Valid values are Contact or Account.</param>
        /// <param name="createSource">Identifies who added SMS details for the contact. The value is set when you create SMS details for the contact. Valid values are &lt;code&gt;Contact&lt;/code&gt; or &lt;code&gt;Account&lt;/code&gt;. .</param>
        /// <param name="smsChannelConsents">Identifies SMS channel consent details such as the current permission status for the SMS channel and opt-in date..</param>
        public GetContactById200ResponseSmsChannel(Guid smsChannelId = default(Guid), string smsAddress = default(string), string dialCode = default(string), string countryCode = default(string), string updateSource = default(string), string createSource = default(string), List<GetContactById200ResponseSmsChannelSmsChannelConsentsInner> smsChannelConsents = default(List<GetContactById200ResponseSmsChannelSmsChannelConsentsInner>))
        {
            this.SmsChannelId = smsChannelId;
            this.SmsAddress = smsAddress;
            this.DialCode = dialCode;
            this.CountryCode = countryCode;
            this.UpdateSource = updateSource;
            this.CreateSource = createSource;
            this.SmsChannelConsents = smsChannelConsents;
        }

        /// <summary>
        /// The unique ID that identifies an SMS channel.
        /// </summary>
        /// <value>The unique ID that identifies an SMS channel.</value>
        /// <example>3fa85f64-5712-6245-b3fc-2c963f66bfc6</example>
        [DataMember(Name = "sms_channel_id", EmitDefaultValue = false)]
        public Guid SmsChannelId { get; set; }

        /// <summary>
        /// The phone number of the SMS-capable phone, which does not include the country code.
        /// </summary>
        /// <value>The phone number of the SMS-capable phone, which does not include the country code.</value>
        /// <example>7815551212</example>
        [DataMember(Name = "sms_address", EmitDefaultValue = false)]
        public string SmsAddress { get; set; }

        /// <summary>
        /// The dial code used for the SMS-capable phone. For example, the dial code for the United States is &lt;code&gt;1&lt;/code&gt;.
        /// </summary>
        /// <value>The dial code used for the SMS-capable phone. For example, the dial code for the United States is &lt;code&gt;1&lt;/code&gt;.</value>
        /// <example>1</example>
        [DataMember(Name = "dial_code", EmitDefaultValue = false)]
        public string DialCode { get; set; }

        /// <summary>
        /// The two character ISO country code used for the SMS-capable phone. For example, the country code for the United States is &lt;code&gt;US&lt;/code&gt;.
        /// </summary>
        /// <value>The two character ISO country code used for the SMS-capable phone. For example, the country code for the United States is &lt;code&gt;US&lt;/code&gt;.</value>
        /// <example>US</example>
        [DataMember(Name = "country_code", EmitDefaultValue = false)]
        public string CountryCode { get; set; }

        /// <summary>
        /// Identifies who last updated SMS details for the contact. Valid values are Contact or Account
        /// </summary>
        /// <value>Identifies who last updated SMS details for the contact. Valid values are Contact or Account</value>
        /// <example>Contact</example>
        [DataMember(Name = "update_source", EmitDefaultValue = false)]
        public string UpdateSource { get; set; }

        /// <summary>
        /// Identifies who added SMS details for the contact. The value is set when you create SMS details for the contact. Valid values are &lt;code&gt;Contact&lt;/code&gt; or &lt;code&gt;Account&lt;/code&gt;. 
        /// </summary>
        /// <value>Identifies who added SMS details for the contact. The value is set when you create SMS details for the contact. Valid values are &lt;code&gt;Contact&lt;/code&gt; or &lt;code&gt;Account&lt;/code&gt;. </value>
        /// <example>Account</example>
        [DataMember(Name = "create_source", EmitDefaultValue = false)]
        public string CreateSource { get; set; }

        /// <summary>
        /// Identifies SMS channel consent details such as the current permission status for the SMS channel and opt-in date.
        /// </summary>
        /// <value>Identifies SMS channel consent details such as the current permission status for the SMS channel and opt-in date.</value>
        [DataMember(Name = "sms_channel_consents", EmitDefaultValue = false)]
        public List<GetContactById200ResponseSmsChannelSmsChannelConsentsInner> SmsChannelConsents { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetContactById200ResponseSmsChannel {\n");
            sb.Append("  SmsChannelId: ").Append(SmsChannelId).Append("\n");
            sb.Append("  SmsAddress: ").Append(SmsAddress).Append("\n");
            sb.Append("  DialCode: ").Append(DialCode).Append("\n");
            sb.Append("  CountryCode: ").Append(CountryCode).Append("\n");
            sb.Append("  UpdateSource: ").Append(UpdateSource).Append("\n");
            sb.Append("  CreateSource: ").Append(CreateSource).Append("\n");
            sb.Append("  SmsChannelConsents: ").Append(SmsChannelConsents).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
