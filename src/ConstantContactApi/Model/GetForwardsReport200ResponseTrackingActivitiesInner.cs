/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// GetForwardsReport200ResponseTrackingActivitiesInner
    /// </summary>
    [DataContract(Name = "getForwardsReport_200_response_tracking_activities_inner")]
    public partial class GetForwardsReport200ResponseTrackingActivitiesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetForwardsReport200ResponseTrackingActivitiesInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetForwardsReport200ResponseTrackingActivitiesInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetForwardsReport200ResponseTrackingActivitiesInner" /> class.
        /// </summary>
        /// <param name="contactId">The ID that uniquely identifies a contact. (required).</param>
        /// <param name="campaignActivityId">The ID that uniquely identifies the email campaign activity. (required).</param>
        /// <param name="trackingActivityType">The type of report tracking activity that is associated with the specified &lt;code&gt;campaign_activity_id&lt;/code&gt;. (required).</param>
        /// <param name="emailAddress">The contact&#39;s email address. (required).</param>
        /// <param name="firstName">The first name of the contact..</param>
        /// <param name="lastName">The last name of the contact..</param>
        /// <param name="createdTime">The time that the contact forwarded the email campaign activity. (required).</param>
        /// <param name="deletedAt">If applicable, displays the date that the contact was deleted..</param>
        public GetForwardsReport200ResponseTrackingActivitiesInner(Guid contactId = default(Guid), Guid campaignActivityId = default(Guid), string trackingActivityType = default(string), string emailAddress = default(string), string firstName = default(string), string lastName = default(string), DateTime createdTime = default(DateTime), DateTime deletedAt = default(DateTime))
        {
            this.ContactId = contactId;
            this.CampaignActivityId = campaignActivityId;
            // to ensure "trackingActivityType" is required (not null)
            if (trackingActivityType == null)
            {
                throw new ArgumentNullException("trackingActivityType is a required property for GetForwardsReport200ResponseTrackingActivitiesInner and cannot be null");
            }
            this.TrackingActivityType = trackingActivityType;
            // to ensure "emailAddress" is required (not null)
            if (emailAddress == null)
            {
                throw new ArgumentNullException("emailAddress is a required property for GetForwardsReport200ResponseTrackingActivitiesInner and cannot be null");
            }
            this.EmailAddress = emailAddress;
            this.CreatedTime = createdTime;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.DeletedAt = deletedAt;
        }

        /// <summary>
        /// The ID that uniquely identifies a contact.
        /// </summary>
        /// <value>The ID that uniquely identifies a contact.</value>
        /// <example>a2fdc285-f4bc-408c-9e64-f3f89038ec82</example>
        [DataMember(Name = "contact_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid ContactId { get; set; }

        /// <summary>
        /// The ID that uniquely identifies the email campaign activity.
        /// </summary>
        /// <value>The ID that uniquely identifies the email campaign activity.</value>
        /// <example>98edac88-f4bc-408c-9e64-acd890384231</example>
        [DataMember(Name = "campaign_activity_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid CampaignActivityId { get; set; }

        /// <summary>
        /// The type of report tracking activity that is associated with the specified &lt;code&gt;campaign_activity_id&lt;/code&gt;.
        /// </summary>
        /// <value>The type of report tracking activity that is associated with the specified &lt;code&gt;campaign_activity_id&lt;/code&gt;.</value>
        /// <example>em_forwards</example>
        [DataMember(Name = "tracking_activity_type", IsRequired = true, EmitDefaultValue = true)]
        public string TrackingActivityType { get; set; }

        /// <summary>
        /// The contact&#39;s email address.
        /// </summary>
        /// <value>The contact&#39;s email address.</value>
        /// <example>maddieb@gmail.com</example>
        [DataMember(Name = "email_address", IsRequired = true, EmitDefaultValue = true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// The first name of the contact.
        /// </summary>
        /// <value>The first name of the contact.</value>
        /// <example>Maddie</example>
        [DataMember(Name = "first_name", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// The last name of the contact.
        /// </summary>
        /// <value>The last name of the contact.</value>
        /// <example>Brown</example>
        [DataMember(Name = "last_name", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// The time that the contact forwarded the email campaign activity.
        /// </summary>
        /// <value>The time that the contact forwarded the email campaign activity.</value>
        /// <example>2019-04-25T11:08Z</example>
        [DataMember(Name = "created_time", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// If applicable, displays the date that the contact was deleted.
        /// </summary>
        /// <value>If applicable, displays the date that the contact was deleted.</value>
        /// <example>Sun Aug 09 20:00:00 EDT 2015</example>
        [DataMember(Name = "deleted_at", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime DeletedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetForwardsReport200ResponseTrackingActivitiesInner {\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  CampaignActivityId: ").Append(CampaignActivityId).Append("\n");
            sb.Append("  TrackingActivityType: ").Append(TrackingActivityType).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  DeletedAt: ").Append(DeletedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
