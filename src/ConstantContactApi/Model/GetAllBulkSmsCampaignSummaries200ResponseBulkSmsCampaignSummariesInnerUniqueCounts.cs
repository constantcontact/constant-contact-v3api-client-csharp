/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// The total number of times each unique contact interacted with a tracked SMS campaign activity.
    /// </summary>
    [DataContract(Name = "getAllBulkSmsCampaignSummaries_200_response_bulk_sms_campaign_summaries_inner_unique_counts")]
    public partial class GetAllBulkSmsCampaignSummaries200ResponseBulkSmsCampaignSummariesInnerUniqueCounts : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetAllBulkSmsCampaignSummaries200ResponseBulkSmsCampaignSummariesInnerUniqueCounts" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetAllBulkSmsCampaignSummaries200ResponseBulkSmsCampaignSummariesInnerUniqueCounts() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetAllBulkSmsCampaignSummaries200ResponseBulkSmsCampaignSummariesInnerUniqueCounts" /> class.
        /// </summary>
        /// <param name="sends">The total number of unique sends. (required).</param>
        /// <param name="delivers">The total number of SMS delivered. (required).</param>
        /// <param name="opens">The total number of unique opens..</param>
        /// <param name="clicks">The total number of unique clicks. (required).</param>
        /// <param name="optouts">The total number of unique opt-outs (unsubscribes). (required).</param>
        public GetAllBulkSmsCampaignSummaries200ResponseBulkSmsCampaignSummariesInnerUniqueCounts(int sends = default(int), int delivers = default(int), int opens = default(int), int clicks = default(int), int optouts = default(int))
        {
            this.Sends = sends;
            this.Delivers = delivers;
            this.Clicks = clicks;
            this.Optouts = optouts;
            this.Opens = opens;
        }

        /// <summary>
        /// The total number of unique sends.
        /// </summary>
        /// <value>The total number of unique sends.</value>
        /// <example>100</example>
        [DataMember(Name = "sends", IsRequired = true, EmitDefaultValue = true)]
        public int Sends { get; set; }

        /// <summary>
        /// The total number of SMS delivered.
        /// </summary>
        /// <value>The total number of SMS delivered.</value>
        /// <example>100</example>
        [DataMember(Name = "delivers", IsRequired = true, EmitDefaultValue = true)]
        public int Delivers { get; set; }

        /// <summary>
        /// The total number of unique opens.
        /// </summary>
        /// <value>The total number of unique opens.</value>
        /// <example>75</example>
        [DataMember(Name = "opens", EmitDefaultValue = false)]
        public int Opens { get; set; }

        /// <summary>
        /// The total number of unique clicks.
        /// </summary>
        /// <value>The total number of unique clicks.</value>
        /// <example>294</example>
        [DataMember(Name = "clicks", IsRequired = true, EmitDefaultValue = true)]
        public int Clicks { get; set; }

        /// <summary>
        /// The total number of unique opt-outs (unsubscribes).
        /// </summary>
        /// <value>The total number of unique opt-outs (unsubscribes).</value>
        /// <example>0</example>
        [DataMember(Name = "optouts", IsRequired = true, EmitDefaultValue = true)]
        public int Optouts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetAllBulkSmsCampaignSummaries200ResponseBulkSmsCampaignSummariesInnerUniqueCounts {\n");
            sb.Append("  Sends: ").Append(Sends).Append("\n");
            sb.Append("  Delivers: ").Append(Delivers).Append("\n");
            sb.Append("  Opens: ").Append(Opens).Append("\n");
            sb.Append("  Clicks: ").Append(Clicks).Append("\n");
            sb.Append("  Optouts: ").Append(Optouts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
