/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// PercentsEmail
    /// </summary>
    [DataContract(Name = "PercentsEmail")]
    public partial class PercentsEmail : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PercentsEmail" /> class.
        /// </summary>
        /// <param name="bounce">Percentage of emails sent to unique recipients that bounced..</param>
        /// <param name="click">Percentage of recipients who opened the email who also clicked one or more links in it..</param>
        /// <param name="desktopClick">Percentage of clicks that came from a standard desktop or laptop computer..</param>
        /// <param name="desktopOpen">Percentage of opens that came from a standard desktop or laptop computer..</param>
        /// <param name="didNotOpen">Percentage of recipients that received the email (did not bounce) but did not open it..</param>
        /// <param name="mobileClick">Percentage of clicks that came from a mobile phone, tablet computer, or similar small mobile device (e.g. iPhone or iPad)..</param>
        /// <param name="mobileOpen">Percentage of opens that came from a mobile phone, tablet computer, or similar small mobile device (e.g. iPhone or iPad)..</param>
        /// <param name="open">Percentage of recipients that received the email (did not bounce) and opened it..</param>
        /// <param name="unsubscribe">Percentage of recipients that received the email (did not bounce) and chose to unsubscribe..</param>
        public PercentsEmail(decimal bounce = default(decimal), decimal click = default(decimal), decimal desktopClick = default(decimal), decimal desktopOpen = default(decimal), decimal didNotOpen = default(decimal), decimal mobileClick = default(decimal), decimal mobileOpen = default(decimal), decimal open = default(decimal), decimal unsubscribe = default(decimal))
        {
            this.Bounce = bounce;
            this.Click = click;
            this.DesktopClick = desktopClick;
            this.DesktopOpen = desktopOpen;
            this.DidNotOpen = didNotOpen;
            this.MobileClick = mobileClick;
            this.MobileOpen = mobileOpen;
            this.Open = open;
            this.Unsubscribe = unsubscribe;
        }

        /// <summary>
        /// Percentage of emails sent to unique recipients that bounced.
        /// </summary>
        /// <value>Percentage of emails sent to unique recipients that bounced.</value>
        /// <example>0</example>
        [DataMember(Name = "bounce", EmitDefaultValue = false)]
        public decimal Bounce { get; set; }

        /// <summary>
        /// Percentage of recipients who opened the email who also clicked one or more links in it.
        /// </summary>
        /// <value>Percentage of recipients who opened the email who also clicked one or more links in it.</value>
        /// <example>40</example>
        [DataMember(Name = "click", EmitDefaultValue = false)]
        public decimal Click { get; set; }

        /// <summary>
        /// Percentage of clicks that came from a standard desktop or laptop computer.
        /// </summary>
        /// <value>Percentage of clicks that came from a standard desktop or laptop computer.</value>
        /// <example>10</example>
        [DataMember(Name = "desktop_click", EmitDefaultValue = false)]
        public decimal DesktopClick { get; set; }

        /// <summary>
        /// Percentage of opens that came from a standard desktop or laptop computer.
        /// </summary>
        /// <value>Percentage of opens that came from a standard desktop or laptop computer.</value>
        /// <example>20</example>
        [DataMember(Name = "desktop_open", EmitDefaultValue = false)]
        public decimal DesktopOpen { get; set; }

        /// <summary>
        /// Percentage of recipients that received the email (did not bounce) but did not open it.
        /// </summary>
        /// <value>Percentage of recipients that received the email (did not bounce) but did not open it.</value>
        /// <example>30</example>
        [DataMember(Name = "did_not_open", EmitDefaultValue = false)]
        public decimal DidNotOpen { get; set; }

        /// <summary>
        /// Percentage of clicks that came from a mobile phone, tablet computer, or similar small mobile device (e.g. iPhone or iPad).
        /// </summary>
        /// <value>Percentage of clicks that came from a mobile phone, tablet computer, or similar small mobile device (e.g. iPhone or iPad).</value>
        /// <example>40</example>
        [DataMember(Name = "mobile_click", EmitDefaultValue = false)]
        public decimal MobileClick { get; set; }

        /// <summary>
        /// Percentage of opens that came from a mobile phone, tablet computer, or similar small mobile device (e.g. iPhone or iPad).
        /// </summary>
        /// <value>Percentage of opens that came from a mobile phone, tablet computer, or similar small mobile device (e.g. iPhone or iPad).</value>
        /// <example>10</example>
        [DataMember(Name = "mobile_open", EmitDefaultValue = false)]
        public decimal MobileOpen { get; set; }

        /// <summary>
        /// Percentage of recipients that received the email (did not bounce) and opened it.
        /// </summary>
        /// <value>Percentage of recipients that received the email (did not bounce) and opened it.</value>
        /// <example>70</example>
        [DataMember(Name = "open", EmitDefaultValue = false)]
        public decimal Open { get; set; }

        /// <summary>
        /// Percentage of recipients that received the email (did not bounce) and chose to unsubscribe.
        /// </summary>
        /// <value>Percentage of recipients that received the email (did not bounce) and chose to unsubscribe.</value>
        /// <example>0</example>
        [DataMember(Name = "unsubscribe", EmitDefaultValue = false)]
        public decimal Unsubscribe { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PercentsEmail {\n");
            sb.Append("  Bounce: ").Append(Bounce).Append("\n");
            sb.Append("  Click: ").Append(Click).Append("\n");
            sb.Append("  DesktopClick: ").Append(DesktopClick).Append("\n");
            sb.Append("  DesktopOpen: ").Append(DesktopOpen).Append("\n");
            sb.Append("  DidNotOpen: ").Append(DidNotOpen).Append("\n");
            sb.Append("  MobileClick: ").Append(MobileClick).Append("\n");
            sb.Append("  MobileOpen: ").Append(MobileOpen).Append("\n");
            sb.Append("  Open: ").Append(Open).Append("\n");
            sb.Append("  Unsubscribe: ").Append(Unsubscribe).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
