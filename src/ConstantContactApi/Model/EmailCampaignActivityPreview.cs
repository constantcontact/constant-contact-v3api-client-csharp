/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.193
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// EmailCampaignActivityPreview
    /// </summary>
    [DataContract(Name = "EmailCampaignActivityPreview")]
    public partial class EmailCampaignActivityPreview : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmailCampaignActivityPreview" /> class.
        /// </summary>
        /// <param name="campaignActivityId">The unique ID for an email campaign activity..</param>
        /// <param name="fromEmail">The \&quot;from email\&quot; email header for the email campaign activity..</param>
        /// <param name="fromName">The \&quot;from name\&quot; email header for the email campaign activity..</param>
        /// <param name="preheader">The email preheader for the email campaign activity. Only &lt;code&gt;format_type&lt;/code&gt; 3, 4, and 5 email campaign activities use the preheader property..</param>
        /// <param name="previewHtmlContent">An HTML preview of the email campaign activity..</param>
        /// <param name="previewTextContent">A plain text preview of the email campaign activity..</param>
        /// <param name="replyToEmail">The email \&quot;Reply To Email\&quot; field for the email campaign activity..</param>
        /// <param name="subject">The email \&quot;Subject\&quot; field for the email campaign activity..</param>
        public EmailCampaignActivityPreview(string campaignActivityId = default(string), string fromEmail = default(string), string fromName = default(string), string preheader = default(string), string previewHtmlContent = default(string), string previewTextContent = default(string), string replyToEmail = default(string), string subject = default(string))
        {
            this.CampaignActivityId = campaignActivityId;
            this.FromEmail = fromEmail;
            this.FromName = fromName;
            this.Preheader = preheader;
            this.PreviewHtmlContent = previewHtmlContent;
            this.PreviewTextContent = previewTextContent;
            this.ReplyToEmail = replyToEmail;
            this.Subject = subject;
        }

        /// <summary>
        /// The unique ID for an email campaign activity.
        /// </summary>
        /// <value>The unique ID for an email campaign activity.</value>
        /// <example>4c08372c-957a-48b5-bc45-72c7f00796cd</example>
        [DataMember(Name = "campaign_activity_id", EmitDefaultValue = false)]
        public string CampaignActivityId { get; set; }

        /// <summary>
        /// The \&quot;from email\&quot; email header for the email campaign activity.
        /// </summary>
        /// <value>The \&quot;from email\&quot; email header for the email campaign activity.</value>
        /// <example>jdodge@constantconatct.com</example>
        [DataMember(Name = "from_email", EmitDefaultValue = false)]
        public string FromEmail { get; set; }

        /// <summary>
        /// The \&quot;from name\&quot; email header for the email campaign activity.
        /// </summary>
        /// <value>The \&quot;from name\&quot; email header for the email campaign activity.</value>
        /// <example>Jake Dodge</example>
        [DataMember(Name = "from_name", EmitDefaultValue = false)]
        public string FromName { get; set; }

        /// <summary>
        /// The email preheader for the email campaign activity. Only &lt;code&gt;format_type&lt;/code&gt; 3, 4, and 5 email campaign activities use the preheader property.
        /// </summary>
        /// <value>The email preheader for the email campaign activity. Only &lt;code&gt;format_type&lt;/code&gt; 3, 4, and 5 email campaign activities use the preheader property.</value>
        /// <example>You don&#39;t want to miss this.</example>
        [DataMember(Name = "preheader", EmitDefaultValue = false)]
        public string Preheader { get; set; }

        /// <summary>
        /// An HTML preview of the email campaign activity.
        /// </summary>
        /// <value>An HTML preview of the email campaign activity.</value>
        /// <example>&lt;html&gt;&lt;body&gt; &lt;a href&#x3D;\&quot;http://www.constantcontact.com\&quot;&gt;Visit ConstantContact.com!&lt;/a&gt; &lt;/body&gt;&lt;/html&gt;</example>
        [DataMember(Name = "preview_html_content", EmitDefaultValue = false)]
        public string PreviewHtmlContent { get; set; }

        /// <summary>
        /// A plain text preview of the email campaign activity.
        /// </summary>
        /// <value>A plain text preview of the email campaign activity.</value>
        /// <example>Email Content</example>
        [DataMember(Name = "preview_text_content", EmitDefaultValue = false)]
        public string PreviewTextContent { get; set; }

        /// <summary>
        /// The email \&quot;Reply To Email\&quot; field for the email campaign activity.
        /// </summary>
        /// <value>The email \&quot;Reply To Email\&quot; field for the email campaign activity.</value>
        /// <example>jdodge@constantcontact.com</example>
        [DataMember(Name = "reply_to_email", EmitDefaultValue = false)]
        public string ReplyToEmail { get; set; }

        /// <summary>
        /// The email \&quot;Subject\&quot; field for the email campaign activity.
        /// </summary>
        /// <value>The email \&quot;Subject\&quot; field for the email campaign activity.</value>
        /// <example>Informed Daily Digest</example>
        [DataMember(Name = "subject", EmitDefaultValue = false)]
        public string Subject { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EmailCampaignActivityPreview {\n");
            sb.Append("  CampaignActivityId: ").Append(CampaignActivityId).Append("\n");
            sb.Append("  FromEmail: ").Append(FromEmail).Append("\n");
            sb.Append("  FromName: ").Append(FromName).Append("\n");
            sb.Append("  Preheader: ").Append(Preheader).Append("\n");
            sb.Append("  PreviewHtmlContent: ").Append(PreviewHtmlContent).Append("\n");
            sb.Append("  PreviewTextContent: ").Append(PreviewTextContent).Append("\n");
            sb.Append("  ReplyToEmail: ").Append(ReplyToEmail).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
