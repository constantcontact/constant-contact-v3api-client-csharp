/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// Provides the status for the requested activity.
    /// </summary>
    [DataContract(Name = "ActivityTaggingStatus")]
    public partial class ActivityTaggingStatus : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityTaggingStatus" /> class.
        /// </summary>
        /// <param name="itemsTotalCount">The total number of items processed for the requested activity..</param>
        /// <param name="itemsCompletedCount">The total number of items for which processing completed for the requested activity..</param>
        public ActivityTaggingStatus(int itemsTotalCount = default(int), int itemsCompletedCount = default(int))
        {
            this.ItemsTotalCount = itemsTotalCount;
            this.ItemsCompletedCount = itemsCompletedCount;
        }

        /// <summary>
        /// The total number of items processed for the requested activity.
        /// </summary>
        /// <value>The total number of items processed for the requested activity.</value>
        /// <example>100</example>
        [DataMember(Name = "items_total_count", EmitDefaultValue = false)]
        public int ItemsTotalCount { get; set; }

        /// <summary>
        /// The total number of items for which processing completed for the requested activity.
        /// </summary>
        /// <value>The total number of items for which processing completed for the requested activity.</value>
        /// <example>25</example>
        [DataMember(Name = "items_completed_count", EmitDefaultValue = false)]
        public int ItemsCompletedCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ActivityTaggingStatus {\n");
            sb.Append("  ItemsTotalCount: ").Append(ItemsTotalCount).Append("\n");
            sb.Append("  ItemsCompletedCount: ").Append(ItemsCompletedCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
