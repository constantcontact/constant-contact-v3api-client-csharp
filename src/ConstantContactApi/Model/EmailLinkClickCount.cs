/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// EmailLinkClickCount
    /// </summary>
    [DataContract(Name = "EmailLinkClickCount")]
    public partial class EmailLinkClickCount : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmailLinkClickCount" /> class.
        /// </summary>
        /// <param name="linkUrl">The URL of a link in an email campaign activity. This URL is not normalized and appears the same as the URL in the email campaign activity..</param>
        /// <param name="urlId">The ID for a unique link URL in an email campaign activity..</param>
        /// <param name="uniqueClicks">The number of unique contacts that clicked the link..</param>
        /// <param name="listAction">If the link uses the click segmentation feature, this property contains the action that contacts trigger when they click the link. Currently the only available action is &lt;code&gt;add&lt;/code&gt;, which adds contacts that click the link to a contact list..</param>
        /// <param name="listId">If the link uses the click segmentation feature, this property contains the contact list linked with the &lt;code&gt;list_action&lt;/code&gt; property..</param>
        /// <param name="linkTag">Link tags are not currently available in email campaigns. By default, this method combines results for duplicate link URLs. Link tags will allow users to get a separate link click report for each unique &lt;code&gt;link_tag&lt;/code&gt; value they use, even if URLs are not unique..</param>
        public EmailLinkClickCount(string linkUrl = default(string), string urlId = default(string), int uniqueClicks = default(int), string listAction = default(string), Guid listId = default(Guid), string linkTag = default(string))
        {
            this.LinkUrl = linkUrl;
            this.UrlId = urlId;
            this.UniqueClicks = uniqueClicks;
            this.ListAction = listAction;
            this.ListId = listId;
            this.LinkTag = linkTag;
        }

        /// <summary>
        /// The URL of a link in an email campaign activity. This URL is not normalized and appears the same as the URL in the email campaign activity.
        /// </summary>
        /// <value>The URL of a link in an email campaign activity. This URL is not normalized and appears the same as the URL in the email campaign activity.</value>
        /// <example>https://www.constantcontact.com/</example>
        [DataMember(Name = "link_url", EmitDefaultValue = false)]
        public string LinkUrl { get; set; }

        /// <summary>
        /// The ID for a unique link URL in an email campaign activity.
        /// </summary>
        /// <value>The ID for a unique link URL in an email campaign activity.</value>
        /// <example>1100577727321</example>
        [DataMember(Name = "url_id", EmitDefaultValue = false)]
        public string UrlId { get; set; }

        /// <summary>
        /// The number of unique contacts that clicked the link.
        /// </summary>
        /// <value>The number of unique contacts that clicked the link.</value>
        /// <example>99</example>
        [DataMember(Name = "unique_clicks", EmitDefaultValue = false)]
        public int UniqueClicks { get; set; }

        /// <summary>
        /// If the link uses the click segmentation feature, this property contains the action that contacts trigger when they click the link. Currently the only available action is &lt;code&gt;add&lt;/code&gt;, which adds contacts that click the link to a contact list.
        /// </summary>
        /// <value>If the link uses the click segmentation feature, this property contains the action that contacts trigger when they click the link. Currently the only available action is &lt;code&gt;add&lt;/code&gt;, which adds contacts that click the link to a contact list.</value>
        /// <example>add</example>
        [DataMember(Name = "list_action", EmitDefaultValue = false)]
        public string ListAction { get; set; }

        /// <summary>
        /// If the link uses the click segmentation feature, this property contains the contact list linked with the &lt;code&gt;list_action&lt;/code&gt; property.
        /// </summary>
        /// <value>If the link uses the click segmentation feature, this property contains the contact list linked with the &lt;code&gt;list_action&lt;/code&gt; property.</value>
        /// <example>3377aefd-970a-4de6-8400-ab4ec491624c</example>
        [DataMember(Name = "list_id", EmitDefaultValue = false)]
        public Guid ListId { get; set; }

        /// <summary>
        /// Link tags are not currently available in email campaigns. By default, this method combines results for duplicate link URLs. Link tags will allow users to get a separate link click report for each unique &lt;code&gt;link_tag&lt;/code&gt; value they use, even if URLs are not unique.
        /// </summary>
        /// <value>Link tags are not currently available in email campaigns. By default, this method combines results for duplicate link URLs. Link tags will allow users to get a separate link click report for each unique &lt;code&gt;link_tag&lt;/code&gt; value they use, even if URLs are not unique.</value>
        /// <example>google-link-1</example>
        [DataMember(Name = "link_tag", EmitDefaultValue = false)]
        public string LinkTag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EmailLinkClickCount {\n");
            sb.Append("  LinkUrl: ").Append(LinkUrl).Append("\n");
            sb.Append("  UrlId: ").Append(UrlId).Append("\n");
            sb.Append("  UniqueClicks: ").Append(UniqueClicks).Append("\n");
            sb.Append("  ListAction: ").Append(ListAction).Append("\n");
            sb.Append("  ListId: ").Append(ListId).Append("\n");
            sb.Append("  LinkTag: ").Append(LinkTag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
