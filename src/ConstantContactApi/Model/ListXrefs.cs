/*
 * Constant Contact API v3
 *
 * Swagger build version 3.0.62
 *
 * The version of the OpenAPI document: 1.0.185
 * Contact: webservices@constantcontact.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ConstantContactApi.Client.OpenAPIDateConverter;

namespace ConstantContactApi.Model
{
    /// <summary>
    /// ListXrefs
    /// </summary>
    [DataContract(Name = "ListXrefs")]
    public partial class ListXrefs : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListXrefs" /> class.
        /// </summary>
        /// <param name="xrefs">An array of cross-referenced V3 API &lt;code&gt;list_id&lt;/code&gt; and V2 API &lt;code&gt;sequence_id&lt;/code&gt; properties. Response is sorted ascending by &lt;code&gt;sequence_id&lt;/code&gt;..</param>
        public ListXrefs(List<GetListIdXrefs200ResponseXrefsInner> xrefs = default(List<GetListIdXrefs200ResponseXrefsInner>))
        {
            this.Xrefs = xrefs;
        }

        /// <summary>
        /// An array of cross-referenced V3 API &lt;code&gt;list_id&lt;/code&gt; and V2 API &lt;code&gt;sequence_id&lt;/code&gt; properties. Response is sorted ascending by &lt;code&gt;sequence_id&lt;/code&gt;.
        /// </summary>
        /// <value>An array of cross-referenced V3 API &lt;code&gt;list_id&lt;/code&gt; and V2 API &lt;code&gt;sequence_id&lt;/code&gt; properties. Response is sorted ascending by &lt;code&gt;sequence_id&lt;/code&gt;.</value>
        [DataMember(Name = "xrefs", EmitDefaultValue = false)]
        public List<GetListIdXrefs200ResponseXrefsInner> Xrefs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ListXrefs {\n");
            sb.Append("  Xrefs: ").Append(Xrefs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
